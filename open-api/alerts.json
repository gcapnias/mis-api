{
  "basePath": "/api",
  "definitions": {
    "AlertInternalIdRestDto": {
      "description": "System internal alert id",
      "properties": {
        "msgSubTypeId": {
          "description": "specific id of alert within the alert source",
          "format": "int32",
          "type": "integer"
        },
        "msgTypeId": {
          "description": "source of alert",
          "format": "int32",
          "type": "integer"
        },
        "processId": {
          "description": "process id of the process  creating the alert ",
          "format": "int32",
          "type": "integer"
        },
        "sourceNode": {
          "description": "ip address of the source node creating the alert ",
          "type": "string"
        }
      },
      "required": [
        "msgSubTypeId",
        "processId",
        "msgTypeId",
        "sourceNode"
      ]
    },
    "AlertRestDto": {
      "properties": {
        "ackState": {
          "description": "acknowledgement status of the alert",
          "enum": [
            "None",
            "Acked",
            "Unacked"
          ],
          "type": "string"
        },
        "activeState": {
          "description": "active status of the alert",
          "enum": [
            "None",
            "Active",
            "Inactive"
          ],
          "type": "string"
        },
        "alertInternalId": {
          "$ref": "#/definitions/AlertInternalIdRestDto",
          "description": "the internal alert ID made up of a number of fields needed to uniquely identify an alert within the system"
        },
        "alertText": {
          "description": "high level description of the alert",
          "type": "string"
        },
        "detailedAlertText": {
          "description": "detailed level description of the alert",
          "type": "string"
        },
        "id": {
          "description": "the resource identifier; the alert id",
          "format": "int64",
          "type": "integer"
        },
        "isMarkedForDeletion": {
          "description": "'true' if this alert is no longer present in the system and will soon be removed from reporting",
          "type": "boolean"
        },
        "links": {
          "description": "*method=GET*Provides link relations as URLs using the REST 'hateoas' convention (for REST delivered data).<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'self' link references this rest object, including any specified query criteria,<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'rel/track' link references this alert's associated track, if any",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "priority": {
          "description": "priority level of the alert",
          "enum": [
            "Info",
            "Warning",
            "Critical"
          ],
          "type": "string"
        }
      },
      "required": [
        "links",
        "alertText",
        "detailedAlertText",
        "alertInternalId",
        "isMarkedForDeletion",
        "ackState",
        "activeState"
      ]
    },
    "AlertsRestDto": {
      "description": "Container for multiple Alerts",
      "properties": {
        "items": {
          "description": "An array of Alerts matching the query criteria",
          "items": {
            "$ref": "#/definitions/AlertRestDto"
          },
          "type": "array"
        },
        "links": {
          "description": "*method=GET*Provides link relations as URLs using the REST 'hateoas' convention (for REST delivered data).<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'self' link references this rest object, including any specified query criteria",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "totalItems": {
          "description": "Total number of elements matching the query filter and not limited by page size",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "links",
        "items",
        "totalItems"
      ]
    },
    "ErrorRestDto": {
      "properties": {
        "code": {
          "description": "HTTP Status Code",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "summary description of the error",
          "type": "string"
        },
        "url": {
          "description": "URL resulting in this error message",
          "type": "string"
        }
      }
    },
    "Link": {
      "properties": {
        "href": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        },
        "templated": {
          "type": "boolean"
        }
      }
    },
    "ResponseBodyExceptionInfo": {
      "description": "description not used ",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorRestDto",
          "description": "error details"
        }
      }
    },
    "Void": {}
  },
  "info": {
    "version": "1.0"
  },
  "paths": {
    "/alerts": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Searches for alerts in the system based on the given criteria.",
        "operationId": "getAlerts",
        "parameters": [
          {
            "description": "Returns alerts that have been updated since (greater than) a specific time.<br>This is useful for clients that are continually polling the server.<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Example Value: 2019-03-14T14:55:00Z specifies a year-month-day followed by 24-hour hours:minutes:seconds in GMT time<br><br>Note that to support usability the pagination query is ignored with this argument; all matched items will be returned.",
            "in": "query",
            "name": "updateSince",
            "required": false,
            "type": "string"
          },
          {
            "default": 1,
            "description": "1-based page number",
            "format": "int32",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 20,
            "description": "size of each page",
            "format": "int32",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. See the 'Response Class' section above for the description of the data.",
            "schema": {
              "$ref": "#/definitions/AlertsRestDto"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Get Alerts"
      }
    },
    "/alerts/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Returns a specific Alert. This includes all available data for the alert.",
        "operationId": "getAlert",
        "parameters": [
          {
            "description": "the alert id",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. See the 'Response Class' section above for the description of the data.",
            "schema": {
              "$ref": "#/definitions/AlertRestDto"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "404": {
            "description": "No such alert found",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Get Alert"
      }
    }
  },
  "swagger": "2.0"
}
