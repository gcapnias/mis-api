{
  "basePath": "/api",
  "definitions": {
    "AlarmAnchorWatchInputRestDto": {
      "properties": {
        "distance": {
          "description": "[1 and greater]: Anchor Area expected to stay within (in meters)",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AlarmAnchorWatchRestDto": {
      "description": "Not used - Alarm data",
      "properties": {
        "alarmId": {
          "description": "ID of the Alarm",
          "format": "int32",
          "type": "integer"
        },
        "distance": {
          "description": "[1 and greater]: Anchor Area expected to stay within (in meters)",
          "format": "int32",
          "type": "integer"
        },
        "links": {
          "description": "*method=GET*Provides link relations as URLs using the REST 'hateoas' convention (for REST delivered data).<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'self' link references this rest object, including any specified query criteria",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "trackIds": {
          "$ref": "#/definitions/TrackIds_IdOnlyRestDto",
          "description": "The tracks which are associated with this alarm"
        },
        "type": {
          "description": "Type of Alarm",
          "enum": [
            "cpa",
            "proximity",
            "anchorWatch",
            "routeDeviate",
            "shallowDepth",
            "stateChanged"
          ],
          "type": "string"
        }
      }
    },
    "AlarmAnchorWatchsRestDto": {
      "description": "Container for multiple Alarm Anchor Watchs",
      "properties": {
        "items": {
          "description": "An array of Alarm Anchor Watchs matching the query criteria",
          "items": {
            "$ref": "#/definitions/AlarmAnchorWatchRestDto"
          },
          "type": "array"
        },
        "links": {
          "description": "*method=GET*Provides link relations as URLs using the REST 'hateoas' convention (for REST delivered data).<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'self' link references this rest object, including any specified query criteria",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "totalItems": {
          "description": "Total number of elements matching the query filter and not limited by page size",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "AlarmCpaInputRestDto": {
      "properties": {
        "distance": {
          "description": "[1 and greater]: Distance which along with time defines the CPA (Closest Point of Approach) alarm (in meters)",
          "format": "int32",
          "type": "integer"
        },
        "time": {
          "description": "[1 and greater]: Time which along with distance defines the CPA (Closest Point of Approach) alarm (in seconds)",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AlarmCpaRestDto": {
      "description": "Not used - Alarm CPA/TCPA data",
      "properties": {
        "alarmId": {
          "description": "ID of the Alarm",
          "format": "int32",
          "type": "integer"
        },
        "distance": {
          "description": "[1 and greater]: Distance which along with time defines the CPA (Closest Point of Approach) alarm (in meters)",
          "format": "int32",
          "type": "integer"
        },
        "links": {
          "description": "*method=GET*Provides link relations as URLs using the REST 'hateoas' convention (for REST delivered data).<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'self' link references this rest object, including any specified query criteria",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "time": {
          "description": "[1 and greater]: Time which along with distance defines the CPA (Closest Point of Approach) alarm (in seconds)",
          "format": "int32",
          "type": "integer"
        },
        "trackIds": {
          "$ref": "#/definitions/TrackIds_IdOnlyRestDto",
          "description": "The tracks which are associated with this alarm"
        },
        "type": {
          "description": "Type of Alarm",
          "enum": [
            "cpa",
            "proximity",
            "anchorWatch",
            "routeDeviate",
            "shallowDepth",
            "stateChanged"
          ],
          "type": "string"
        }
      }
    },
    "AlarmCpasRestDto": {
      "description": "Container for multiple Alarm Cpas",
      "properties": {
        "items": {
          "description": "An array of Alarm CPAs matching the query criteria",
          "items": {
            "$ref": "#/definitions/AlarmCpaRestDto"
          },
          "type": "array"
        },
        "links": {
          "description": "*method=GET*Provides link relations as URLs using the REST 'hateoas' convention (for REST delivered data).<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'self' link references this rest object, including any specified query criteria",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "totalItems": {
          "description": "Total number of elements matching the query filter and not limited by page size",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "AlarmIdRestDto": {
      "description": "Not used - Alarm id",
      "properties": {
        "alarmId": {
          "description": "ID of the Alarm",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AlarmProximityInputRestDto": {
      "properties": {
        "distance": {
          "description": "[1 and greater]: Proximity expected to stay away from (in meters)",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AlarmProximityRestDto": {
      "description": "Not used - Alarm data",
      "properties": {
        "alarmId": {
          "description": "ID of the Alarm",
          "format": "int32",
          "type": "integer"
        },
        "distance": {
          "description": "[1 and greater]: Proximity expected to stay away from (in meters)",
          "format": "int32",
          "type": "integer"
        },
        "links": {
          "description": "*method=GET*Provides link relations as URLs using the REST 'hateoas' convention (for REST delivered data).<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'self' link references this rest object, including any specified query criteria",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "trackIds": {
          "$ref": "#/definitions/TrackIds_IdOnlyRestDto",
          "description": "The tracks which are associated with this alarm"
        },
        "type": {
          "description": "Type of Alarm",
          "enum": [
            "cpa",
            "proximity",
            "anchorWatch",
            "routeDeviate",
            "shallowDepth",
            "stateChanged"
          ],
          "type": "string"
        }
      }
    },
    "AlarmProximitysRestDto": {
      "description": "Container for multiple Alarm Proximitys",
      "properties": {
        "items": {
          "description": "An array of Alarm Proximitys matching the query criteria",
          "items": {
            "$ref": "#/definitions/AlarmProximityRestDto"
          },
          "type": "array"
        },
        "links": {
          "description": "*method=GET*Provides link relations as URLs using the REST 'hateoas' convention (for REST delivered data).<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'self' link references this rest object, including any specified query criteria",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "totalItems": {
          "description": "Total number of elements matching the query filter and not limited by page size",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "AlarmRestDto": {
      "description": "Not used - Alarm data",
      "properties": {
        "alarmId": {
          "description": "ID of the Alarm",
          "format": "int32",
          "type": "integer"
        },
        "links": {
          "description": "*method=GET*Provides link relations as URLs using the REST 'hateoas' convention (for REST delivered data).<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'self' link references this rest object, including any specified query criteria",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "trackIds": {
          "$ref": "#/definitions/TrackIds_IdOnlyRestDto",
          "description": "The tracks which are associated with this alarm"
        },
        "type": {
          "description": "Type of Alarm",
          "enum": [
            "cpa",
            "proximity",
            "anchorWatch",
            "routeDeviate",
            "shallowDepth",
            "stateChanged"
          ],
          "type": "string"
        }
      }
    },
    "AlarmShallowDepthInputRestDto": {
      "properties": {
        "distance": {
          "description": "[1 and greater]: Safe Limit Distance (in meters)",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AlarmShallowDepthRestDto": {
      "description": "Not used - Alarm data",
      "properties": {
        "alarmId": {
          "description": "ID of the Alarm",
          "format": "int32",
          "type": "integer"
        },
        "distance": {
          "description": "[1 and greater]: Safe Limit Distance (in meters)",
          "format": "int32",
          "type": "integer"
        },
        "links": {
          "description": "*method=GET*Provides link relations as URLs using the REST 'hateoas' convention (for REST delivered data).<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'self' link references this rest object, including any specified query criteria",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "trackIds": {
          "$ref": "#/definitions/TrackIds_IdOnlyRestDto",
          "description": "The tracks which are associated with this alarm"
        },
        "type": {
          "description": "Type of Alarm",
          "enum": [
            "cpa",
            "proximity",
            "anchorWatch",
            "routeDeviate",
            "shallowDepth",
            "stateChanged"
          ],
          "type": "string"
        }
      }
    },
    "AlarmShallowDepthsRestDto": {
      "description": "Container for multiple Alarm Shallow Depths",
      "properties": {
        "items": {
          "description": "An array of Alarm Shallow Depths matching the query criteria",
          "items": {
            "$ref": "#/definitions/AlarmShallowDepthRestDto"
          },
          "type": "array"
        },
        "links": {
          "description": "*method=GET*Provides link relations as URLs using the REST 'hateoas' convention (for REST delivered data).<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'self' link references this rest object, including any specified query criteria",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "totalItems": {
          "description": "Total number of elements matching the query filter and not limited by page size",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "AlarmStateChangedRestDto": {
      "description": "Not used - Alarm data",
      "properties": {
        "alarmId": {
          "description": "ID of the Alarm",
          "format": "int32",
          "type": "integer"
        },
        "links": {
          "description": "*method=GET*Provides link relations as URLs using the REST 'hateoas' convention (for REST delivered data).<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'self' link references this rest object, including any specified query criteria",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "trackIds": {
          "$ref": "#/definitions/TrackIds_IdOnlyRestDto",
          "description": "The tracks which are associated with this alarm"
        },
        "type": {
          "description": "Type of Alarm",
          "enum": [
            "cpa",
            "proximity",
            "anchorWatch",
            "routeDeviate",
            "shallowDepth",
            "stateChanged"
          ],
          "type": "string"
        }
      }
    },
    "AlarmStateChangedsRestDto": {
      "description": "Container for multiple Alarm StateChangeds",
      "properties": {
        "items": {
          "description": "An array of Alarm StateChangeds matching the query criteria",
          "items": {
            "$ref": "#/definitions/AlarmStateChangedRestDto"
          },
          "type": "array"
        },
        "links": {
          "description": "*method=GET*Provides link relations as URLs using the REST 'hateoas' convention (for REST delivered data).<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'self' link references this rest object, including any specified query criteria",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "totalItems": {
          "description": "Total number of elements matching the query filter and not limited by page size",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "AlarmsRestDto": {
      "description": "Container for multiple Alarm",
      "properties": {
        "items": {
          "description": "An array of Alarms matching the query criteria",
          "items": {
            "$ref": "#/definitions/AlarmRestDto"
          },
          "type": "array"
        },
        "links": {
          "description": "*method=GET*Provides link relations as URLs using the REST 'hateoas' convention (for REST delivered data).<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'self' link references this rest object, including any specified query criteria",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "totalItems": {
          "description": "Total number of elements matching the query filter and not limited by page size",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ErrorRestDto": {
      "properties": {
        "code": {
          "description": "HTTP Status Code",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "summary description of the error",
          "type": "string"
        },
        "url": {
          "description": "URL resulting in this error message",
          "type": "string"
        }
      }
    },
    "Link": {
      "properties": {
        "href": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        },
        "templated": {
          "type": "boolean"
        }
      }
    },
    "ResponseBodyExceptionInfo": {
      "description": "description not used ",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorRestDto",
          "description": "error details"
        }
      }
    },
    "TrackId_IdOnlyRestDto": {
      "description": "Container for a track ID and its links",
      "properties": {
        "id": {
          "description": "the track id (e.g. 'COM0100100').<br>Format is &lt;\"COM\"|\"SYS\"|\"SEN\"&gt;&lt;TSI&gt; &lt;CTI&gt;<br><br>The first three characters represent the current tracker mode,<br>&nbsp;&nbsp;COM=Composite Tracker,<br>&nbsp;&nbsp;SYS=System Tracker and<br>&nbsp;&nbsp;SEN = Sensor Tracker.<br>The next 2 digits represent the Tracker Unit Number (TSI).<br>The last 5 digits represent the Local Track ID (CTI)<br>(and must be exactly 5 digits long to be valid).<br><br>Example Value: 'COM0100002' is from the Composite Tracker, uses 1 as the TSI and 2 as the CTI.",
          "type": "string"
        },
        "links": {
          "description": "*method=GET*Provides link relations as URLs using the REST 'hateoas' convention (for REST delivered data).<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'self' link references this rest object, including any specified query criteria",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        }
      }
    },
    "TrackIds_IdOnlyRestDto": {
      "description": "Container for showing multiple Tracks IDs",
      "properties": {
        "items": {
          "description": "An array of Track Ids",
          "items": {
            "$ref": "#/definitions/TrackId_IdOnlyRestDto"
          },
          "type": "array"
        },
        "links": {
          "description": "*method=GET*Provides link relations as URLs using the REST 'hateoas' convention (for REST delivered data).<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'self' link references this rest object, including any specified query criteria",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "totalItems": {
          "description": "Total number of elements matching the query filter and not limited by page size",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "Void": {}
  },
  "info": {
    "version": "1.0"
  },
  "paths": {
    "/alarms": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Requests all Alarms in the system, providing high level information for them",
        "operationId": "getAlarms",
        "parameters": [
          {
            "description": "Provides information on which tracks are associated with the alarm.<br>Value: [tracks]",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "string"
          },
          {
            "default": 1,
            "description": "1-based page number",
            "format": "int32",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 20,
            "description": "size of each page",
            "format": "int32",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. See the 'Response Class' section above for the description of the data.",
            "schema": {
              "$ref": "#/definitions/AlarmsRestDto"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Get all types of Alarms"
      }
    },
    "/alarms/anchorWatch": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Requests all Anchor Watch Alarms in the system.",
        "operationId": "getAnchorWatchAlarms",
        "parameters": [
          {
            "description": "Provides information on which tracks are associated with the alarm.<br>Value: [tracks]",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "string"
          },
          {
            "default": 1,
            "description": "1-based page number",
            "format": "int32",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 20,
            "description": "size of each page",
            "format": "int32",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. See the 'Response Class' section above for the description of the data.",
            "schema": {
              "$ref": "#/definitions/AlarmAnchorWatchsRestDto"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Get Anchor Watch Alarms"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Create an Anchor Watch Alarm with the supplied parameters.<br>See the \"Parameters\" section for details of this parameter.",
        "operationId": "postAnchorWatchAlarm",
        "parameters": [
          {
            "description": "Parameter to create an Anchor Watch Alarm.<br>A copy and pastable example of settings is:<br>{  \"distance\": 500<br>}",
            "in": "body",
            "name": "alarmAnchorWatchInput",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlarmAnchorWatchInputRestDto"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/AlarmIdRestDto"
            }
          },
          "202": {
            "description": "Accepted (the request to build the resource has been accepted but the resource itself is not yet necessarily created) ",
            "schema": {
              "$ref": "#/definitions/ResponseEntity«AlarmIdRestDto»"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Create an Anchor Watch Alarm"
      }
    },
    "/alarms/anchorWatch/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Requests an Anchor Watch Alarm as identified by its id",
        "operationId": "getAnchorWatchAlarm",
        "parameters": [
          {
            "description": "the alarm id",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Provides information on which tracks are associated with the alarm.<br>Value: [tracks]",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. See the 'Response Class' section above for the description of the data.",
            "schema": {
              "$ref": "#/definitions/AlarmAnchorWatchRestDto"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "404": {
            "description": "No such Anchor Watch Alarm found",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Get an Anchor Watch Alarm"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Update an Anchor Watch Alarm with the supplied parameter.<br>See the \"Parameters\" section for detail of this parameter.",
        "operationId": "putAnchorWatchAlarm",
        "parameters": [
          {
            "description": "the alarm id",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Parameter to update an Anchor Watch Alarm.<br>A copy and pastable example of settings is:<br>{  \"distance\": 500<br>}",
            "in": "body",
            "name": "alarmAnchorWatchInput",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlarmAnchorWatchInputRestDto"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "202": {
            "description": "Accepted (the request to update the resource has been accepted but the resource itself is not yet necessarily updated.) "
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "404": {
            "description": "No such Anchor Watch Alarm found",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Update an Anchor Watch Alarm"
      }
    },
    "/alarms/cpa": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Requests all CPA Alarms in the system (closest point of approach).",
        "operationId": "getCpaAlarms",
        "parameters": [
          {
            "description": "Provides information on which tracks are associated with the alarm.<br>Value: [tracks]",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "string"
          },
          {
            "default": 1,
            "description": "1-based page number",
            "format": "int32",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 20,
            "description": "size of each page",
            "format": "int32",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. See the 'Response Class' section above for the description of the data.",
            "schema": {
              "$ref": "#/definitions/AlarmCpasRestDto"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Get CPA Alarms"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Create a CPA Alarm with the supplied parameters.<br>Any combination of tracks within the given parameters will trigger the alarm (seen as an alert).<br>See the \"Parameters\" section for details of these parameters.",
        "operationId": "postCpaAlarm",
        "parameters": [
          {
            "description": "Parameters to create a CPA Alarm.<br>Note that both distance and time are required.<br>A copy and pastable example of settings is:<br>{  \"distance\": 500,<br>  \"time\": 300<br>}",
            "in": "body",
            "name": "alarmCpaInput",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlarmCpaInputRestDto"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/AlarmIdRestDto"
            }
          },
          "202": {
            "description": "Accepted (the request to build the resource has been accepted but the resource itself is not yet necessarily created) ",
            "schema": {
              "$ref": "#/definitions/ResponseEntity«AlarmIdRestDto»"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Create a CPA Alarm"
      }
    },
    "/alarms/cpa/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Requests a CPA Alarm as identified by its id",
        "operationId": "getCpaAlarm",
        "parameters": [
          {
            "description": "the alarm id",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Provides information on which tracks are associated with the alarm.<br>Value: [tracks]",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. See the 'Response Class' section above for the description of the data.",
            "schema": {
              "$ref": "#/definitions/AlarmCpaRestDto"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "404": {
            "description": "No such CPA Alarm found",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Get a CPA Alarm"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Update a CPA Alarm with the supplied parameters.<br>See the \"Parameters\" section for details of these parameters.",
        "operationId": "putCpaAlarm",
        "parameters": [
          {
            "description": "the alarm id",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Parameters to update a CPA Alarm.<br>Note that both distance and time are required.<br>A copy and pastable example of settings is:<br>{  \"distance\": 500,<br>  \"time\": 300<br>}",
            "in": "body",
            "name": "alarmCpaInput",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlarmCpaInputRestDto"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "202": {
            "description": "Accepted (the request to update the resource has been accepted but the resource itself is not yet necessarily updated.) "
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "404": {
            "description": "No such CPA Alarm found",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Update a CPA Alarm"
      }
    },
    "/alarms/proximity": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Requests all Proximity Alarms in the system.",
        "operationId": "getProximityAlarms",
        "parameters": [
          {
            "description": "Provides information on which tracks are associated with the alarm.<br>Value: [tracks]",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "string"
          },
          {
            "default": 1,
            "description": "1-based page number",
            "format": "int32",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 20,
            "description": "size of each page",
            "format": "int32",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. See the 'Response Class' section above for the description of the data.",
            "schema": {
              "$ref": "#/definitions/AlarmProximitysRestDto"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Get Proximity Alarms"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Create a Proximity Alarm with the supplied parameters.<br>See the \"Parameters\" section for details of this parameter.",
        "operationId": "postProximityAlarm",
        "parameters": [
          {
            "description": "Parameter to create a Proximity Alarm.<br>A copy and pastable example of settings is:<br>{  \"distance\": 500<br>}",
            "in": "body",
            "name": "alarmProximityInput",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlarmProximityInputRestDto"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/AlarmIdRestDto"
            }
          },
          "202": {
            "description": "Accepted (the request to build the resource has been accepted but the resource itself is not yet necessarily created) ",
            "schema": {
              "$ref": "#/definitions/ResponseEntity«AlarmIdRestDto»"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Create a Proximity Alarm"
      }
    },
    "/alarms/proximity/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Requests a Proximity Alarm as identified by its id",
        "operationId": "getProximityAlarm",
        "parameters": [
          {
            "description": "the alarm id",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Provides information on which tracks are associated with the alarm.<br>Value: [tracks]",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. See the 'Response Class' section above for the description of the data.",
            "schema": {
              "$ref": "#/definitions/AlarmProximityRestDto"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "404": {
            "description": "No such Proximity Alarm found",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Get a Proximity Alarm"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Update a Proximity Alarm with the supplied parameter.<br>See the \"Parameters\" section for detail of this parameter.",
        "operationId": "putProximityAlarm",
        "parameters": [
          {
            "description": "the alarm id",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Parameter to update a Proximity Alarm.<br>A copy and pastable example of settings is:<br>{  \"distance\": 500<br>}",
            "in": "body",
            "name": "alarmProximityInput",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlarmProximityInputRestDto"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "202": {
            "description": "Accepted (the request to update the resource has been accepted but the resource itself is not yet necessarily updated.) "
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "404": {
            "description": "No such Proximity Alarm found",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Update a Proximity Alarm"
      }
    },
    "/alarms/shallowDepth": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Requests all Shallow Depth Alarms in the system.",
        "operationId": "getShallowDepthAlarms",
        "parameters": [
          {
            "description": "Provides information on which tracks are associated with the alarm.<br>Value: [tracks]",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "string"
          },
          {
            "default": 1,
            "description": "1-based page number",
            "format": "int32",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 20,
            "description": "size of each page",
            "format": "int32",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. See the 'Response Class' section above for the description of the data.",
            "schema": {
              "$ref": "#/definitions/AlarmShallowDepthsRestDto"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Get Shallow Depth Alarms"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Create a Shallow Depth Alarm with the supplied parameters.<br>See the \"Parameters\" section for details of this parameter.",
        "operationId": "postShallowDepthAlarm",
        "parameters": [
          {
            "description": "Parameter to create a Shallow Depth Alarm.<br>A copy and pastable example of settings is:<br>{  \"distance\": 500<br>}",
            "in": "body",
            "name": "alarmShallowDepthInput",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlarmShallowDepthInputRestDto"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/AlarmIdRestDto"
            }
          },
          "202": {
            "description": "Accepted (the request to build the resource has been accepted but the resource itself is not yet necessarily created) ",
            "schema": {
              "$ref": "#/definitions/ResponseEntity«AlarmIdRestDto»"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Create a Shallow Depth Alarm"
      }
    },
    "/alarms/shallowDepth/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Requests a Shallow Depth Alarm as identified by its id",
        "operationId": "getShallowDepthAlarm",
        "parameters": [
          {
            "description": "the alarm id",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Provides information on which tracks are associated with the alarm.<br>Value: [tracks]",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. See the 'Response Class' section above for the description of the data.",
            "schema": {
              "$ref": "#/definitions/AlarmShallowDepthRestDto"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "404": {
            "description": "No such Shallow Depth Alarm found",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Get a Shallow Depth Alarm"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Update a Shallow Depth Alarm with the supplied parameter.<br>See the \"Parameters\" section for detail of this parameter.",
        "operationId": "putShallowDepthAlarm",
        "parameters": [
          {
            "description": "the alarm id",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Parameter to update a Shallow Depth Alarm.<br>A copy and pastable example of settings is:<br>{  \"distance\": 500<br>}",
            "in": "body",
            "name": "alarmShallowDepthInput",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlarmShallowDepthInputRestDto"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "202": {
            "description": "Accepted (the request to update the resource has been accepted but the resource itself is not yet necessarily updated.) "
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "404": {
            "description": "No such Shallow Depth Alarm found",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Update a Shallow Depth Alarm"
      }
    },
    "/alarms/stateChanged": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Requests all State Changed Alarms in the system.",
        "operationId": "getStateChangedAlarms",
        "parameters": [
          {
            "description": "Provides information on which tracks are associated with the alarm.<br>Value: [tracks]",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "string"
          },
          {
            "default": 1,
            "description": "1-based page number",
            "format": "int32",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 20,
            "description": "size of each page",
            "format": "int32",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. See the 'Response Class' section above for the description of the data.",
            "schema": {
              "$ref": "#/definitions/AlarmStateChangedsRestDto"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Get State Changed Alarms"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Create a State Changed Alarm to detect if the state of the specified track(s) have changed.",
        "operationId": "postStateChangedAlarm",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/AlarmIdRestDto"
            }
          },
          "202": {
            "description": "Accepted (the request to build the resource has been accepted but the resource itself is not yet necessarily created) ",
            "schema": {
              "$ref": "#/definitions/ResponseEntity«AlarmIdRestDto»"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Create a State Changed Alarm"
      }
    },
    "/alarms/stateChanged/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Requests a State Changed Alarm as identified by its id",
        "operationId": "getStateChangedAlarm",
        "parameters": [
          {
            "description": "the alarm id",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Provides information on which tracks are associated with the alarm.<br>Value: [tracks]",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. See the 'Response Class' section above for the description of the data.",
            "schema": {
              "$ref": "#/definitions/AlarmStateChangedRestDto"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "404": {
            "description": "No such State Changed Alarm found",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Get a State Changed Alarm"
      }
    },
    "/alarms/{id}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Request the Alarm with the given ID to be dropped from the system.",
        "operationId": "deleteAlarm",
        "parameters": [
          {
            "description": "the alarm id",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "202": {
            "description": "Accepted (the request to remove the resource has been accepted but the resource itself is not yet necessarily removed.) "
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "404": {
            "description": "No such alarms found",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Drop an Alarm"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Requests an Alarm in the system, providing high level information for it",
        "operationId": "getAlarm",
        "parameters": [
          {
            "description": "the alarm id",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Provides information on which tracks are associated with the alarm.<br>Value: [tracks]",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. See the 'Response Class' section above for the description of the data.",
            "schema": {
              "$ref": "#/definitions/AlarmRestDto"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "404": {
            "description": "No such Alarm found",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Get an Alarm"
      }
    },
    "/alarms/{id}/tracks": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Requests the ids of the track associated with the specified Alarm",
        "operationId": "getAlarmTracks",
        "parameters": [
          {
            "description": "the alarm id",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. See the 'Response Class' section above for the description of the data.",
            "schema": {
              "$ref": "#/definitions/TrackIds_IdOnlyRestDto"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "404": {
            "description": "No such Alarm found",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Get the Alarms tracks"
      }
    },
    "/alarms/{id}/tracks/add/{trackId}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "This adds the requested track to the Alarm.<br>If the track is already associated with the alarm no change is made and the request is accepted. (Note that if the track doesn't exist in the system then a 'Resource not found status' is returned.)",
        "operationId": "postAddTrack",
        "parameters": [
          {
            "description": "the alarm id",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "the track id (e.g. 'COM0100100').<br>Format is &lt;\"COM\"|\"SYS\"|\"SEN\"&gt;&lt;TSI&gt; &lt;CTI&gt;<br><br>The first three characters represent the current tracker mode,<br>&nbsp;&nbsp;COM=Composite Tracker,<br>&nbsp;&nbsp;SYS=System Tracker and<br>&nbsp;&nbsp;SEN = Sensor Tracker.<br>The next 2 digits represent the Tracker Unit Number (TSI).<br>The last 5 digits represent the Local Track ID (CTI)<br>(and must be exactly 5 digits long to be valid).<br><br>Example Value: 'COM0100002' is from the Composite Tracker, uses 1 as the TSI and 2 as the CTI.",
            "in": "path",
            "name": "trackId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "202": {
            "description": "Accepted (the request to update the resource has been accepted but the resource itself is not yet necessarily updated.) "
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "404": {
            "description": "No such Alarm or Track found",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Add the track to the specified Alarm"
      }
    },
    "/alarms/{id}/tracks/delete/{trackId}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "This removes the track from the Alarm.<br>If the track isn't already associated with the alarm no change is made and the request is still accepted.",
        "operationId": "postDeleteTrack",
        "parameters": [
          {
            "description": "the alarm id",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "the track id (e.g. 'COM0100100').<br>Format is &lt;\"COM\"|\"SYS\"|\"SEN\"&gt;&lt;TSI&gt; &lt;CTI&gt;<br><br>The first three characters represent the current tracker mode,<br>&nbsp;&nbsp;COM=Composite Tracker,<br>&nbsp;&nbsp;SYS=System Tracker and<br>&nbsp;&nbsp;SEN = Sensor Tracker.<br>The next 2 digits represent the Tracker Unit Number (TSI).<br>The last 5 digits represent the Local Track ID (CTI)<br>(and must be exactly 5 digits long to be valid).<br><br>Example Value: 'COM0100002' is from the Composite Tracker, uses 1 as the TSI and 2 as the CTI.",
            "in": "path",
            "name": "trackId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "202": {
            "description": "Accepted (the request to update the resource has been accepted but the resource itself is not yet necessarily updated.) "
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "404": {
            "description": "No such Alarm found",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Remove the track from the specified Alarm"
      }
    }
  },
  "swagger": "2.0"
}
