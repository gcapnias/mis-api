{
  "basePath": "/api",
  "definitions": {
    "ErrorRestDto": {
      "properties": {
        "code": {
          "description": "HTTP Status Code",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "summary description of the error",
          "type": "string"
        },
        "url": {
          "description": "URL resulting in this error message",
          "type": "string"
        }
      }
    },
    "GeoReferenceRestDto": {
      "description": "Geophysical location",
      "properties": {
        "latitude": {
          "description": "[-89.0 to +89.0]: latitude (Decimal Degrees, North Positive/South Negative)",
          "format": "double",
          "type": "number"
        },
        "longitude": {
          "description": "[-180.0 to +180.0]: longitude (Decimal Degrees, East Positive/West Negative)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "latitude",
        "longitude"
      ]
    },
    "Link": {
      "properties": {
        "href": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        },
        "templated": {
          "type": "boolean"
        }
      }
    },
    "RIRadarRestDto": {
      "description": "per Radar information",
      "properties": {
        "color": {
          "description": "[heatmap, red, green, magenta, orange, yellow]: Color to apply to the Radar Image for this Radar.<br>The intensity of the presented color at each pixel is according to the intensity of the Radar signal it represents.<br>Defaults to green",
          "type": "string"
        },
        "rpNum": {
          "description": "[1-64]: RP Number of the radar contributing to the image.<br>There is no default value; this value must be supplied",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "rpNum"
      ]
    },
    "RIWindowRestDto": {
      "description": "Windowing screen dimensions",
      "properties": {
        "height": {
          "description": "Number of pixels along the height of the image.<br>[128 to 4096]: Width in pixels. The total number of pixels (width * height) may not exceed the multiple of 1024 * 1024<br>Defaults to  1024",
          "format": "int32",
          "type": "integer"
        },
        "width": {
          "description": "Number of pixels along the width of the image.<br>[128 to 4096]: Width in pixels. The total number of pixels (width * height) may not exceed the multiple of 1024 * 1024<br>Defaults to  1024",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "RadarImageSettingRestDto": {
      "properties": {
        "center": {
          "$ref": "#/definitions/GeoReferenceRestDto",
          "description": "center of the image. The default is 0 latitude, 0 longitude."
        },
        "id": {
          "description": "the resource identifier; the radar image id (as returned in the POST radarImage request).<br>This field is used in a response; it is not settable by the client",
          "format": "int32",
          "type": "integer"
        },
        "imageAging": {
          "description": "['none', 'continuous' or a numeric range from 1 to 3600]: defines whether to use image aging, and if a number is supplied it specifies the seconds to use for image aging.<br>Defaults to 15",
          "type": "string"
        },
        "imageUrl": {
          "description": "URL by which the image can be retrieved.<br>This field is used in a response; it is not settable by the client",
          "type": "string"
        },
        "links": {
          "description": "*method=GET*Provides link relations as URLs using the REST 'hateoas' convention (for REST delivered data).<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'self' link references this rest object,<br>&nbsp;&nbsp;&nbsp;&nbsp;The 'rel/radarImage' link references the Radar Image data of this resource",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "lowerLeft": {
          "$ref": "#/definitions/GeoReferenceRestDto",
          "description": "lower left boundary of the image.<br>This field is used in a response; it is not settable by the client"
        },
        "metersPerPixel": {
          "description": "specifies the meters per pixel -- the granularity of the image. This along with the windowDimension width and height determines the geographic coverage of the image.<br>Minimum allowed value is 0.1.<br>Defaults to 3.0",
          "format": "float",
          "type": "number"
        },
        "radars": {
          "description": "radar(s) to use to generate the image.<br>Note that at least one of the given radars must be generating the data needed for the Radar Image else a HTTP error response will be returned",
          "items": {
            "$ref": "#/definitions/RIRadarRestDto"
          },
          "type": "array"
        },
        "upperRight": {
          "$ref": "#/definitions/GeoReferenceRestDto",
          "description": "upper right boundary of the image.<br>This field is used in a response; it is not settable by the client"
        },
        "windowDimension": {
          "$ref": "#/definitions/RIWindowRestDto",
          "description": "windowing dimensions for display (width and height in pixels)"
        }
      },
      "required": [
        "lowerLeft",
        "metersPerPixel",
        "radars",
        "center",
        "imageUrl",
        "upperRight"
      ]
    },
    "ResponseBodyExceptionInfo": {
      "description": "description not used ",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorRestDto",
          "description": "error details"
        }
      }
    },
    "Void": {}
  },
  "info": {
    "version": "1.0"
  },
  "paths": {
    "/radarImages": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Create a Radar Image resource with custom settings.<br>This API call is the first of two steps needed for retrieving Radar Images. (The second step being the 'GET /radarImages' API.)<br>This sets up the resource for later GETs of a Radar Image, and whose settings can be retrieved or changed via the GET or PATCH of the Radar Image settings.<br><br>Please Note:<br><ul><li>- The resource is automatically removed from the system once no rest requests (GET or PATCH) for this resource have been made for a minute.</li><li>- A limited number of Radar Image resources can exist in the system simultaneously; exceeding that amount will result in failure and require a later retry.</li><li>- Only a few fields need to be provided; the rest will be set to a reasonable default. See the \"Parameters\" section, \"Description\" column for further details.</li><li>- The rpNum(s) field, which represents the Radar(s), require at least one to be active for an image to result at 'GET /radarImages' request time. If none are active, this will result with a 4xx status at 'GET /radarImages' request time. (Hint: see the 'GET /radars' API for currently active radars.)</li><li>- The request class and the response class are the same. However not all fields are used in the request. See the \"Parameters\" section, \"Data Type\" column, \"Model\" for those fields available.</li></ul>",
        "operationId": "postRadarImageSetting",
        "parameters": [
          {
            "description": "There are reasonable default settings for all fields except the rpNum(s) and center.<br>Hint: Valid rpNum values can be discovered via the 'GET /radars' API.<br>A copy and paste-able example of settings are:<br>{ \"radars\": [ { \"rpNum\": 22 } ],<br>\"center\": {<br>   \"latitude\": 33.74,<br>   \"longitude\": -118.16<br>  }<br>}",
            "in": "body",
            "name": "radarImageSetting",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RadarImageSettingRestDto"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/RadarImageSettingRestDto"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResponseEntity«RadarImageSettingRestDto»"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "429": {
            "description": "Too many requests made; too many Radar Image resources exist and so cannot service the current request.<br>If existing resources are not requested for a minute, then space for another resource will become available.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Create Radar Image resource"
      }
    },
    "/radarImages/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Retrieves the current Radar Image as a .png based on the latest settings.<br/><br>Please Note:<br><ul><li>- A new image is available every 0.5 seconds.<li>- An empty image results when the 'window' area given in the POST does not find sufficient Radar return. Try expanding or moving the 'window' accordingly.</li></ul>",
        "operationId": "getRadarImage",
        "parameters": [
          {
            "description": "the radar image id (as returned in the POST radarImage request)",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Success. See the 'Response Class' section above for the description of the data.",
            "schema": {
              "items": {
                "format": "int32",
                "type": "integer"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "404": {
            "description": "No such Radar Image resource found. This can happen for a number of cases for radar images; such as no data supplied at COMRIC, or the GET request is too soon after the POST.<br/>Another common cause is that the previously given rpNum(s) (given in the 'POST /radarImages' request) is not active.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "410": {
            "description": "Resource Gone for Radar Image; Due to lack of activity by client on the resource",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Get Radar Image"
      }
    },
    "/radarImages/{id}/settings": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Retrieve the settings used for processing a Radar Image.<br>Note that only the operator who created the Radar Image (via POST) can perform this GET.",
        "operationId": "getRadarImageSetting",
        "parameters": [
          {
            "description": "the radar image id (as returned in the POST radarImage request)",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. See the 'Response Class' section above for the description of the data.",
            "schema": {
              "$ref": "#/definitions/RadarImageSettingRestDto"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "404": {
            "description": "No such Radar Image resource found",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Get Radar Image settings"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Update the settings used for processing a Radar Image. <br>Note that fields not provided will remain unchanged, and that only the operator who created the Radar Image (via POST) can perform this PATCH.<br>See the POST operation, \"Implementation Notes\" section, for further usage notes",
        "operationId": "updateRadarImageSetting",
        "parameters": [
          {
            "description": "the radar image id (as returned in the POST radarImage request)",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Specify the Radar Image settings to be changed",
            "in": "body",
            "name": "radarImageSetting",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RadarImageSettingRestDto"
            }
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. See the 'Response Class' section above for the description of the data.",
            "schema": {
              "$ref": "#/definitions/RadarImageSettingRestDto"
            }
          },
          "400": {
            "description": "Bad Request. Typically invalid or incomplete parameter(s). See the 'message' property for detail of the error.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "401": {
            "description": "Insufficient authorization. Basic Authentication is missing, invalid, or permissions are insufficient for the operation.",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          },
          "404": {
            "description": "No such Radar Image resource found",
            "schema": {
              "$ref": "#/definitions/ResponseBodyExceptionInfo"
            }
          }
        },
        "summary": "Update Radar Image settings"
      }
    }
  },
  "swagger": "2.0"
}
