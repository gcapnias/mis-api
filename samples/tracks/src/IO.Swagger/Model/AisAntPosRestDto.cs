/* 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// AisAntPosRestDto
    /// </summary>
    [DataContract]
        public partial class AisAntPosRestDto :  IEquatable<AisAntPosRestDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AisAntPosRestDto" /> class.
        /// </summary>
        /// <param name="posToBow">[0 to 511]: Distance from antenna position to bow - AIS Length A (required).</param>
        /// <param name="posToPort">[0 to 63]: Distance from antenna position to bow - AIS Length C (required).</param>
        /// <param name="posToStbd">[0 to 63]: Distance from antenna position to bow - AIS Length D (required).</param>
        /// <param name="posToStern">[0 to 511]: Distance from antenna position to bow - AIS Length B (required).</param>
        public AisAntPosRestDto(int? posToBow = default(int?), int? posToPort = default(int?), int? posToStbd = default(int?), int? posToStern = default(int?))
        {
            // to ensure "posToBow" is required (not null)
            if (posToBow == null)
            {
                throw new InvalidDataException("posToBow is a required property for AisAntPosRestDto and cannot be null");
            }
            else
            {
                this.PosToBow = posToBow;
            }
            // to ensure "posToPort" is required (not null)
            if (posToPort == null)
            {
                throw new InvalidDataException("posToPort is a required property for AisAntPosRestDto and cannot be null");
            }
            else
            {
                this.PosToPort = posToPort;
            }
            // to ensure "posToStbd" is required (not null)
            if (posToStbd == null)
            {
                throw new InvalidDataException("posToStbd is a required property for AisAntPosRestDto and cannot be null");
            }
            else
            {
                this.PosToStbd = posToStbd;
            }
            // to ensure "posToStern" is required (not null)
            if (posToStern == null)
            {
                throw new InvalidDataException("posToStern is a required property for AisAntPosRestDto and cannot be null");
            }
            else
            {
                this.PosToStern = posToStern;
            }
        }
        
        /// <summary>
        /// [0 to 511]: Distance from antenna position to bow - AIS Length A
        /// </summary>
        /// <value>[0 to 511]: Distance from antenna position to bow - AIS Length A</value>
        [DataMember(Name="posToBow", EmitDefaultValue=false)]
        public int? PosToBow { get; set; }

        /// <summary>
        /// [0 to 63]: Distance from antenna position to bow - AIS Length C
        /// </summary>
        /// <value>[0 to 63]: Distance from antenna position to bow - AIS Length C</value>
        [DataMember(Name="posToPort", EmitDefaultValue=false)]
        public int? PosToPort { get; set; }

        /// <summary>
        /// [0 to 63]: Distance from antenna position to bow - AIS Length D
        /// </summary>
        /// <value>[0 to 63]: Distance from antenna position to bow - AIS Length D</value>
        [DataMember(Name="posToStbd", EmitDefaultValue=false)]
        public int? PosToStbd { get; set; }

        /// <summary>
        /// [0 to 511]: Distance from antenna position to bow - AIS Length B
        /// </summary>
        /// <value>[0 to 511]: Distance from antenna position to bow - AIS Length B</value>
        [DataMember(Name="posToStern", EmitDefaultValue=false)]
        public int? PosToStern { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AisAntPosRestDto {\n");
            sb.Append("  PosToBow: ").Append(PosToBow).Append("\n");
            sb.Append("  PosToPort: ").Append(PosToPort).Append("\n");
            sb.Append("  PosToStbd: ").Append(PosToStbd).Append("\n");
            sb.Append("  PosToStern: ").Append(PosToStern).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AisAntPosRestDto);
        }

        /// <summary>
        /// Returns true if AisAntPosRestDto instances are equal
        /// </summary>
        /// <param name="input">Instance of AisAntPosRestDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AisAntPosRestDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PosToBow == input.PosToBow ||
                    (this.PosToBow != null &&
                    this.PosToBow.Equals(input.PosToBow))
                ) && 
                (
                    this.PosToPort == input.PosToPort ||
                    (this.PosToPort != null &&
                    this.PosToPort.Equals(input.PosToPort))
                ) && 
                (
                    this.PosToStbd == input.PosToStbd ||
                    (this.PosToStbd != null &&
                    this.PosToStbd.Equals(input.PosToStbd))
                ) && 
                (
                    this.PosToStern == input.PosToStern ||
                    (this.PosToStern != null &&
                    this.PosToStern.Equals(input.PosToStern))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PosToBow != null)
                    hashCode = hashCode * 59 + this.PosToBow.GetHashCode();
                if (this.PosToPort != null)
                    hashCode = hashCode * 59 + this.PosToPort.GetHashCode();
                if (this.PosToStbd != null)
                    hashCode = hashCode * 59 + this.PosToStbd.GetHashCode();
                if (this.PosToStern != null)
                    hashCode = hashCode * 59 + this.PosToStern.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
