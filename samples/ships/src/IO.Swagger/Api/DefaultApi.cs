/* 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using IO.Swagger.Client;
using IO.Swagger.Model;

namespace IO.Swagger.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
        public interface IDefaultApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Get Ship
        /// </summary>
        /// <remarks>
        /// This is the root representation of a specific ship object; it provides sufficient identification information to represent the ship object to the user. In addition to this data, it provides links to children and other associated objects, allowing one to gather all available information about a stored ship.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <param name="expand">Allows links to be expanded inline.&lt;br&gt;Values: detail (optional)</param>
        /// <returns>Ship</returns>
        Ship GetShip (int? id, string expand = null);

        /// <summary>
        /// Get Ship
        /// </summary>
        /// <remarks>
        /// This is the root representation of a specific ship object; it provides sufficient identification information to represent the ship object to the user. In addition to this data, it provides links to children and other associated objects, allowing one to gather all available information about a stored ship.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <param name="expand">Allows links to be expanded inline.&lt;br&gt;Values: detail (optional)</param>
        /// <returns>ApiResponse of Ship</returns>
        ApiResponse<Ship> GetShipWithHttpInfo (int? id, string expand = null);
        /// <summary>
        /// Get Ship&#x27;s Detail
        /// </summary>
        /// <remarks>
        /// This endpoint returns additional ship details including ship registry, construction, characteristics and contact information.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <returns>ShipDetailRestDto</returns>
        ShipDetailRestDto GetShipDetail (int? id);

        /// <summary>
        /// Get Ship&#x27;s Detail
        /// </summary>
        /// <remarks>
        /// This endpoint returns additional ship details including ship registry, construction, characteristics and contact information.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <returns>ApiResponse of ShipDetailRestDto</returns>
        ApiResponse<ShipDetailRestDto> GetShipDetailWithHttpInfo (int? id);
        /// <summary>
        /// Get Ships
        /// </summary>
        /// <remarks>
        /// This is the primary means of searching ships.&lt;br&gt;It represents an array of ships that meet the specified search parameters.&lt;br&gt;Note that only one of the &#x27;search&#x27; types of query &#x27;Parameter Types&#x27; can be set at a time&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(only one of imoNumber, lastUpdate, mmsiNumber, or shipName).&lt;br&gt;Note that the returned array of ships is paged.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="create">*hidden* (optional)</param>
        /// <param name="expand">Allows links to be expanded inline.&lt;br&gt;Values: detail (optional)</param>
        /// <param name="imoNumber">Return all ships that have a complete or partial IMO match. (optional)</param>
        /// <param name="lastUpdate">Return all ships that have had data updated or have been created since the given datetime.&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Example Value: 2019-03-14T14:55:00Z specifies a year-month-day followed by 24-hour hours:minutes:seconds in GMT time&lt;br&gt;&lt;br&gt;Note that to support usability the pagination query is ignored with this argument; all matched items will be returned. (optional)</param>
        /// <param name="mmsiNumber">Return all ships that have a complete or partial MMSI match. (optional)</param>
        /// <param name="shipName">Return all ships that have a complete or partial Ship Name match. (optional)</param>
        /// <param name="page">1-based page number (optional, default to 1)</param>
        /// <param name="size">size of each page (optional, default to 20)</param>
        /// <returns>ShipsRestDto</returns>
        ShipsRestDto GetShips (bool? create = null, string expand = null, string imoNumber = null, string lastUpdate = null, string mmsiNumber = null, string shipName = null, int? page = null, int? size = null);

        /// <summary>
        /// Get Ships
        /// </summary>
        /// <remarks>
        /// This is the primary means of searching ships.&lt;br&gt;It represents an array of ships that meet the specified search parameters.&lt;br&gt;Note that only one of the &#x27;search&#x27; types of query &#x27;Parameter Types&#x27; can be set at a time&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(only one of imoNumber, lastUpdate, mmsiNumber, or shipName).&lt;br&gt;Note that the returned array of ships is paged.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="create">*hidden* (optional)</param>
        /// <param name="expand">Allows links to be expanded inline.&lt;br&gt;Values: detail (optional)</param>
        /// <param name="imoNumber">Return all ships that have a complete or partial IMO match. (optional)</param>
        /// <param name="lastUpdate">Return all ships that have had data updated or have been created since the given datetime.&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Example Value: 2019-03-14T14:55:00Z specifies a year-month-day followed by 24-hour hours:minutes:seconds in GMT time&lt;br&gt;&lt;br&gt;Note that to support usability the pagination query is ignored with this argument; all matched items will be returned. (optional)</param>
        /// <param name="mmsiNumber">Return all ships that have a complete or partial MMSI match. (optional)</param>
        /// <param name="shipName">Return all ships that have a complete or partial Ship Name match. (optional)</param>
        /// <param name="page">1-based page number (optional, default to 1)</param>
        /// <param name="size">size of each page (optional, default to 20)</param>
        /// <returns>ApiResponse of ShipsRestDto</returns>
        ApiResponse<ShipsRestDto> GetShipsWithHttpInfo (bool? create = null, string expand = null, string imoNumber = null, string lastUpdate = null, string mmsiNumber = null, string shipName = null, int? page = null, int? size = null);
        /// <summary>
        /// post_getExternalData
        /// </summary>
        /// <remarks>
        /// post_getExternalData
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="idTypeAndValue">id_type_and_value</param>
        /// <returns>HttpEntityobject</returns>
        HttpEntityobject PostGetExternalData (string idTypeAndValue);

        /// <summary>
        /// post_getExternalData
        /// </summary>
        /// <remarks>
        /// post_getExternalData
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="idTypeAndValue">id_type_and_value</param>
        /// <returns>ApiResponse of HttpEntityobject</returns>
        ApiResponse<HttpEntityobject> PostGetExternalDataWithHttpInfo (string idTypeAndValue);
        /// <summary>
        /// Create Ship
        /// </summary>
        /// <remarks>
        /// Creates Ship item for any combination of basic and detailed information.&lt;br&gt;Note that the type of ship data must be specified in the sourceType of Ais, Manual, or External.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">model (optional)</param>
        /// <returns>Ship</returns>
        Ship PostShip (Ship body = null);

        /// <summary>
        /// Create Ship
        /// </summary>
        /// <remarks>
        /// Creates Ship item for any combination of basic and detailed information.&lt;br&gt;Note that the type of ship data must be specified in the sourceType of Ais, Manual, or External.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">model (optional)</param>
        /// <returns>ApiResponse of Ship</returns>
        ApiResponse<Ship> PostShipWithHttpInfo (Ship body = null);
        /// <summary>
        /// Update Ship
        /// </summary>
        /// <remarks>
        /// Updates Ship item for any combination of basic and detailed information.&lt;br&gt;Note that the type of ship data must be specified in the sourceType of Ais, Manual, or External.&lt;br&gt;Note that unset input results in no change.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <param name="body">model (optional)</param>
        /// <returns>Ship</returns>
        Ship PutShip (int? id, Ship body = null);

        /// <summary>
        /// Update Ship
        /// </summary>
        /// <remarks>
        /// Updates Ship item for any combination of basic and detailed information.&lt;br&gt;Note that the type of ship data must be specified in the sourceType of Ais, Manual, or External.&lt;br&gt;Note that unset input results in no change.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <param name="body">model (optional)</param>
        /// <returns>ApiResponse of Ship</returns>
        ApiResponse<Ship> PutShipWithHttpInfo (int? id, Ship body = null);
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// Get Ship
        /// </summary>
        /// <remarks>
        /// This is the root representation of a specific ship object; it provides sufficient identification information to represent the ship object to the user. In addition to this data, it provides links to children and other associated objects, allowing one to gather all available information about a stored ship.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <param name="expand">Allows links to be expanded inline.&lt;br&gt;Values: detail (optional)</param>
        /// <returns>Task of Ship</returns>
        System.Threading.Tasks.Task<Ship> GetShipAsync (int? id, string expand = null);

        /// <summary>
        /// Get Ship
        /// </summary>
        /// <remarks>
        /// This is the root representation of a specific ship object; it provides sufficient identification information to represent the ship object to the user. In addition to this data, it provides links to children and other associated objects, allowing one to gather all available information about a stored ship.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <param name="expand">Allows links to be expanded inline.&lt;br&gt;Values: detail (optional)</param>
        /// <returns>Task of ApiResponse (Ship)</returns>
        System.Threading.Tasks.Task<ApiResponse<Ship>> GetShipAsyncWithHttpInfo (int? id, string expand = null);
        /// <summary>
        /// Get Ship&#x27;s Detail
        /// </summary>
        /// <remarks>
        /// This endpoint returns additional ship details including ship registry, construction, characteristics and contact information.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <returns>Task of ShipDetailRestDto</returns>
        System.Threading.Tasks.Task<ShipDetailRestDto> GetShipDetailAsync (int? id);

        /// <summary>
        /// Get Ship&#x27;s Detail
        /// </summary>
        /// <remarks>
        /// This endpoint returns additional ship details including ship registry, construction, characteristics and contact information.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <returns>Task of ApiResponse (ShipDetailRestDto)</returns>
        System.Threading.Tasks.Task<ApiResponse<ShipDetailRestDto>> GetShipDetailAsyncWithHttpInfo (int? id);
        /// <summary>
        /// Get Ships
        /// </summary>
        /// <remarks>
        /// This is the primary means of searching ships.&lt;br&gt;It represents an array of ships that meet the specified search parameters.&lt;br&gt;Note that only one of the &#x27;search&#x27; types of query &#x27;Parameter Types&#x27; can be set at a time&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(only one of imoNumber, lastUpdate, mmsiNumber, or shipName).&lt;br&gt;Note that the returned array of ships is paged.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="create">*hidden* (optional)</param>
        /// <param name="expand">Allows links to be expanded inline.&lt;br&gt;Values: detail (optional)</param>
        /// <param name="imoNumber">Return all ships that have a complete or partial IMO match. (optional)</param>
        /// <param name="lastUpdate">Return all ships that have had data updated or have been created since the given datetime.&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Example Value: 2019-03-14T14:55:00Z specifies a year-month-day followed by 24-hour hours:minutes:seconds in GMT time&lt;br&gt;&lt;br&gt;Note that to support usability the pagination query is ignored with this argument; all matched items will be returned. (optional)</param>
        /// <param name="mmsiNumber">Return all ships that have a complete or partial MMSI match. (optional)</param>
        /// <param name="shipName">Return all ships that have a complete or partial Ship Name match. (optional)</param>
        /// <param name="page">1-based page number (optional, default to 1)</param>
        /// <param name="size">size of each page (optional, default to 20)</param>
        /// <returns>Task of ShipsRestDto</returns>
        System.Threading.Tasks.Task<ShipsRestDto> GetShipsAsync (bool? create = null, string expand = null, string imoNumber = null, string lastUpdate = null, string mmsiNumber = null, string shipName = null, int? page = null, int? size = null);

        /// <summary>
        /// Get Ships
        /// </summary>
        /// <remarks>
        /// This is the primary means of searching ships.&lt;br&gt;It represents an array of ships that meet the specified search parameters.&lt;br&gt;Note that only one of the &#x27;search&#x27; types of query &#x27;Parameter Types&#x27; can be set at a time&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(only one of imoNumber, lastUpdate, mmsiNumber, or shipName).&lt;br&gt;Note that the returned array of ships is paged.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="create">*hidden* (optional)</param>
        /// <param name="expand">Allows links to be expanded inline.&lt;br&gt;Values: detail (optional)</param>
        /// <param name="imoNumber">Return all ships that have a complete or partial IMO match. (optional)</param>
        /// <param name="lastUpdate">Return all ships that have had data updated or have been created since the given datetime.&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Example Value: 2019-03-14T14:55:00Z specifies a year-month-day followed by 24-hour hours:minutes:seconds in GMT time&lt;br&gt;&lt;br&gt;Note that to support usability the pagination query is ignored with this argument; all matched items will be returned. (optional)</param>
        /// <param name="mmsiNumber">Return all ships that have a complete or partial MMSI match. (optional)</param>
        /// <param name="shipName">Return all ships that have a complete or partial Ship Name match. (optional)</param>
        /// <param name="page">1-based page number (optional, default to 1)</param>
        /// <param name="size">size of each page (optional, default to 20)</param>
        /// <returns>Task of ApiResponse (ShipsRestDto)</returns>
        System.Threading.Tasks.Task<ApiResponse<ShipsRestDto>> GetShipsAsyncWithHttpInfo (bool? create = null, string expand = null, string imoNumber = null, string lastUpdate = null, string mmsiNumber = null, string shipName = null, int? page = null, int? size = null);
        /// <summary>
        /// post_getExternalData
        /// </summary>
        /// <remarks>
        /// post_getExternalData
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="idTypeAndValue">id_type_and_value</param>
        /// <returns>Task of HttpEntityobject</returns>
        System.Threading.Tasks.Task<HttpEntityobject> PostGetExternalDataAsync (string idTypeAndValue);

        /// <summary>
        /// post_getExternalData
        /// </summary>
        /// <remarks>
        /// post_getExternalData
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="idTypeAndValue">id_type_and_value</param>
        /// <returns>Task of ApiResponse (HttpEntityobject)</returns>
        System.Threading.Tasks.Task<ApiResponse<HttpEntityobject>> PostGetExternalDataAsyncWithHttpInfo (string idTypeAndValue);
        /// <summary>
        /// Create Ship
        /// </summary>
        /// <remarks>
        /// Creates Ship item for any combination of basic and detailed information.&lt;br&gt;Note that the type of ship data must be specified in the sourceType of Ais, Manual, or External.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">model (optional)</param>
        /// <returns>Task of Ship</returns>
        System.Threading.Tasks.Task<Ship> PostShipAsync (Ship body = null);

        /// <summary>
        /// Create Ship
        /// </summary>
        /// <remarks>
        /// Creates Ship item for any combination of basic and detailed information.&lt;br&gt;Note that the type of ship data must be specified in the sourceType of Ais, Manual, or External.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">model (optional)</param>
        /// <returns>Task of ApiResponse (Ship)</returns>
        System.Threading.Tasks.Task<ApiResponse<Ship>> PostShipAsyncWithHttpInfo (Ship body = null);
        /// <summary>
        /// Update Ship
        /// </summary>
        /// <remarks>
        /// Updates Ship item for any combination of basic and detailed information.&lt;br&gt;Note that the type of ship data must be specified in the sourceType of Ais, Manual, or External.&lt;br&gt;Note that unset input results in no change.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <param name="body">model (optional)</param>
        /// <returns>Task of Ship</returns>
        System.Threading.Tasks.Task<Ship> PutShipAsync (int? id, Ship body = null);

        /// <summary>
        /// Update Ship
        /// </summary>
        /// <remarks>
        /// Updates Ship item for any combination of basic and detailed information.&lt;br&gt;Note that the type of ship data must be specified in the sourceType of Ais, Manual, or External.&lt;br&gt;Note that unset input results in no change.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <param name="body">model (optional)</param>
        /// <returns>Task of ApiResponse (Ship)</returns>
        System.Threading.Tasks.Task<ApiResponse<Ship>> PutShipAsyncWithHttpInfo (int? id, Ship body = null);
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
        public partial class DefaultApi : IDefaultApi
    {
        private IO.Swagger.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DefaultApi(String basePath)
        {
            this.Configuration = new IO.Swagger.Client.Configuration { BasePath = basePath };

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class
        /// </summary>
        /// <returns></returns>
        public DefaultApi()
        {
            this.Configuration = IO.Swagger.Client.Configuration.Default;

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public DefaultApi(IO.Swagger.Client.Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = IO.Swagger.Client.Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public IO.Swagger.Client.Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public IO.Swagger.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new ReadOnlyDictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        /// Get Ship This is the root representation of a specific ship object; it provides sufficient identification information to represent the ship object to the user. In addition to this data, it provides links to children and other associated objects, allowing one to gather all available information about a stored ship.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <param name="expand">Allows links to be expanded inline.&lt;br&gt;Values: detail (optional)</param>
        /// <returns>Ship</returns>
        public Ship GetShip (int? id, string expand = null)
        {
             ApiResponse<Ship> localVarResponse = GetShipWithHttpInfo(id, expand);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Get Ship This is the root representation of a specific ship object; it provides sufficient identification information to represent the ship object to the user. In addition to this data, it provides links to children and other associated objects, allowing one to gather all available information about a stored ship.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <param name="expand">Allows links to be expanded inline.&lt;br&gt;Values: detail (optional)</param>
        /// <returns>ApiResponse of Ship</returns>
        public ApiResponse< Ship > GetShipWithHttpInfo (int? id, string expand = null)
        {
            // verify the required parameter 'id' is set
            if (id == null)
                throw new ApiException(400, "Missing required parameter 'id' when calling DefaultApi->GetShip");

            var localVarPath = "/ships/{id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/xml",
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarPathParams.Add("id", this.Configuration.ApiClient.ParameterToString(id)); // path parameter
            if (expand != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "expand", expand)); // query parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetShip", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Ship>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (Ship) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Ship)));
        }

        /// <summary>
        /// Get Ship This is the root representation of a specific ship object; it provides sufficient identification information to represent the ship object to the user. In addition to this data, it provides links to children and other associated objects, allowing one to gather all available information about a stored ship.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <param name="expand">Allows links to be expanded inline.&lt;br&gt;Values: detail (optional)</param>
        /// <returns>Task of Ship</returns>
        public async System.Threading.Tasks.Task<Ship> GetShipAsync (int? id, string expand = null)
        {
             ApiResponse<Ship> localVarResponse = await GetShipAsyncWithHttpInfo(id, expand);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Get Ship This is the root representation of a specific ship object; it provides sufficient identification information to represent the ship object to the user. In addition to this data, it provides links to children and other associated objects, allowing one to gather all available information about a stored ship.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <param name="expand">Allows links to be expanded inline.&lt;br&gt;Values: detail (optional)</param>
        /// <returns>Task of ApiResponse (Ship)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Ship>> GetShipAsyncWithHttpInfo (int? id, string expand = null)
        {
            // verify the required parameter 'id' is set
            if (id == null)
                throw new ApiException(400, "Missing required parameter 'id' when calling DefaultApi->GetShip");

            var localVarPath = "/ships/{id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/xml",
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarPathParams.Add("id", this.Configuration.ApiClient.ParameterToString(id)); // path parameter
            if (expand != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "expand", expand)); // query parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetShip", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Ship>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (Ship) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Ship)));
        }

        /// <summary>
        /// Get Ship&#x27;s Detail This endpoint returns additional ship details including ship registry, construction, characteristics and contact information.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <returns>ShipDetailRestDto</returns>
        public ShipDetailRestDto GetShipDetail (int? id)
        {
             ApiResponse<ShipDetailRestDto> localVarResponse = GetShipDetailWithHttpInfo(id);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Get Ship&#x27;s Detail This endpoint returns additional ship details including ship registry, construction, characteristics and contact information.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <returns>ApiResponse of ShipDetailRestDto</returns>
        public ApiResponse< ShipDetailRestDto > GetShipDetailWithHttpInfo (int? id)
        {
            // verify the required parameter 'id' is set
            if (id == null)
                throw new ApiException(400, "Missing required parameter 'id' when calling DefaultApi->GetShipDetail");

            var localVarPath = "/ships/{id}/detail";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/xml",
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarPathParams.Add("id", this.Configuration.ApiClient.ParameterToString(id)); // path parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetShipDetail", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<ShipDetailRestDto>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (ShipDetailRestDto) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(ShipDetailRestDto)));
        }

        /// <summary>
        /// Get Ship&#x27;s Detail This endpoint returns additional ship details including ship registry, construction, characteristics and contact information.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <returns>Task of ShipDetailRestDto</returns>
        public async System.Threading.Tasks.Task<ShipDetailRestDto> GetShipDetailAsync (int? id)
        {
             ApiResponse<ShipDetailRestDto> localVarResponse = await GetShipDetailAsyncWithHttpInfo(id);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Get Ship&#x27;s Detail This endpoint returns additional ship details including ship registry, construction, characteristics and contact information.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <returns>Task of ApiResponse (ShipDetailRestDto)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<ShipDetailRestDto>> GetShipDetailAsyncWithHttpInfo (int? id)
        {
            // verify the required parameter 'id' is set
            if (id == null)
                throw new ApiException(400, "Missing required parameter 'id' when calling DefaultApi->GetShipDetail");

            var localVarPath = "/ships/{id}/detail";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/xml",
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarPathParams.Add("id", this.Configuration.ApiClient.ParameterToString(id)); // path parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetShipDetail", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<ShipDetailRestDto>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (ShipDetailRestDto) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(ShipDetailRestDto)));
        }

        /// <summary>
        /// Get Ships This is the primary means of searching ships.&lt;br&gt;It represents an array of ships that meet the specified search parameters.&lt;br&gt;Note that only one of the &#x27;search&#x27; types of query &#x27;Parameter Types&#x27; can be set at a time&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(only one of imoNumber, lastUpdate, mmsiNumber, or shipName).&lt;br&gt;Note that the returned array of ships is paged.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="create">*hidden* (optional)</param>
        /// <param name="expand">Allows links to be expanded inline.&lt;br&gt;Values: detail (optional)</param>
        /// <param name="imoNumber">Return all ships that have a complete or partial IMO match. (optional)</param>
        /// <param name="lastUpdate">Return all ships that have had data updated or have been created since the given datetime.&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Example Value: 2019-03-14T14:55:00Z specifies a year-month-day followed by 24-hour hours:minutes:seconds in GMT time&lt;br&gt;&lt;br&gt;Note that to support usability the pagination query is ignored with this argument; all matched items will be returned. (optional)</param>
        /// <param name="mmsiNumber">Return all ships that have a complete or partial MMSI match. (optional)</param>
        /// <param name="shipName">Return all ships that have a complete or partial Ship Name match. (optional)</param>
        /// <param name="page">1-based page number (optional, default to 1)</param>
        /// <param name="size">size of each page (optional, default to 20)</param>
        /// <returns>ShipsRestDto</returns>
        public ShipsRestDto GetShips (bool? create = null, string expand = null, string imoNumber = null, string lastUpdate = null, string mmsiNumber = null, string shipName = null, int? page = null, int? size = null)
        {
             ApiResponse<ShipsRestDto> localVarResponse = GetShipsWithHttpInfo(create, expand, imoNumber, lastUpdate, mmsiNumber, shipName, page, size);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Get Ships This is the primary means of searching ships.&lt;br&gt;It represents an array of ships that meet the specified search parameters.&lt;br&gt;Note that only one of the &#x27;search&#x27; types of query &#x27;Parameter Types&#x27; can be set at a time&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(only one of imoNumber, lastUpdate, mmsiNumber, or shipName).&lt;br&gt;Note that the returned array of ships is paged.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="create">*hidden* (optional)</param>
        /// <param name="expand">Allows links to be expanded inline.&lt;br&gt;Values: detail (optional)</param>
        /// <param name="imoNumber">Return all ships that have a complete or partial IMO match. (optional)</param>
        /// <param name="lastUpdate">Return all ships that have had data updated or have been created since the given datetime.&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Example Value: 2019-03-14T14:55:00Z specifies a year-month-day followed by 24-hour hours:minutes:seconds in GMT time&lt;br&gt;&lt;br&gt;Note that to support usability the pagination query is ignored with this argument; all matched items will be returned. (optional)</param>
        /// <param name="mmsiNumber">Return all ships that have a complete or partial MMSI match. (optional)</param>
        /// <param name="shipName">Return all ships that have a complete or partial Ship Name match. (optional)</param>
        /// <param name="page">1-based page number (optional, default to 1)</param>
        /// <param name="size">size of each page (optional, default to 20)</param>
        /// <returns>ApiResponse of ShipsRestDto</returns>
        public ApiResponse< ShipsRestDto > GetShipsWithHttpInfo (bool? create = null, string expand = null, string imoNumber = null, string lastUpdate = null, string mmsiNumber = null, string shipName = null, int? page = null, int? size = null)
        {

            var localVarPath = "/ships";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/xml",
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (create != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "create", create)); // query parameter
            if (expand != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "expand", expand)); // query parameter
            if (imoNumber != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "imoNumber", imoNumber)); // query parameter
            if (lastUpdate != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "lastUpdate", lastUpdate)); // query parameter
            if (mmsiNumber != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "mmsiNumber", mmsiNumber)); // query parameter
            if (shipName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "shipName", shipName)); // query parameter
            if (page != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "page", page)); // query parameter
            if (size != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "size", size)); // query parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetShips", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<ShipsRestDto>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (ShipsRestDto) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(ShipsRestDto)));
        }

        /// <summary>
        /// Get Ships This is the primary means of searching ships.&lt;br&gt;It represents an array of ships that meet the specified search parameters.&lt;br&gt;Note that only one of the &#x27;search&#x27; types of query &#x27;Parameter Types&#x27; can be set at a time&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(only one of imoNumber, lastUpdate, mmsiNumber, or shipName).&lt;br&gt;Note that the returned array of ships is paged.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="create">*hidden* (optional)</param>
        /// <param name="expand">Allows links to be expanded inline.&lt;br&gt;Values: detail (optional)</param>
        /// <param name="imoNumber">Return all ships that have a complete or partial IMO match. (optional)</param>
        /// <param name="lastUpdate">Return all ships that have had data updated or have been created since the given datetime.&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Example Value: 2019-03-14T14:55:00Z specifies a year-month-day followed by 24-hour hours:minutes:seconds in GMT time&lt;br&gt;&lt;br&gt;Note that to support usability the pagination query is ignored with this argument; all matched items will be returned. (optional)</param>
        /// <param name="mmsiNumber">Return all ships that have a complete or partial MMSI match. (optional)</param>
        /// <param name="shipName">Return all ships that have a complete or partial Ship Name match. (optional)</param>
        /// <param name="page">1-based page number (optional, default to 1)</param>
        /// <param name="size">size of each page (optional, default to 20)</param>
        /// <returns>Task of ShipsRestDto</returns>
        public async System.Threading.Tasks.Task<ShipsRestDto> GetShipsAsync (bool? create = null, string expand = null, string imoNumber = null, string lastUpdate = null, string mmsiNumber = null, string shipName = null, int? page = null, int? size = null)
        {
             ApiResponse<ShipsRestDto> localVarResponse = await GetShipsAsyncWithHttpInfo(create, expand, imoNumber, lastUpdate, mmsiNumber, shipName, page, size);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Get Ships This is the primary means of searching ships.&lt;br&gt;It represents an array of ships that meet the specified search parameters.&lt;br&gt;Note that only one of the &#x27;search&#x27; types of query &#x27;Parameter Types&#x27; can be set at a time&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(only one of imoNumber, lastUpdate, mmsiNumber, or shipName).&lt;br&gt;Note that the returned array of ships is paged.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="create">*hidden* (optional)</param>
        /// <param name="expand">Allows links to be expanded inline.&lt;br&gt;Values: detail (optional)</param>
        /// <param name="imoNumber">Return all ships that have a complete or partial IMO match. (optional)</param>
        /// <param name="lastUpdate">Return all ships that have had data updated or have been created since the given datetime.&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Example Value: 2019-03-14T14:55:00Z specifies a year-month-day followed by 24-hour hours:minutes:seconds in GMT time&lt;br&gt;&lt;br&gt;Note that to support usability the pagination query is ignored with this argument; all matched items will be returned. (optional)</param>
        /// <param name="mmsiNumber">Return all ships that have a complete or partial MMSI match. (optional)</param>
        /// <param name="shipName">Return all ships that have a complete or partial Ship Name match. (optional)</param>
        /// <param name="page">1-based page number (optional, default to 1)</param>
        /// <param name="size">size of each page (optional, default to 20)</param>
        /// <returns>Task of ApiResponse (ShipsRestDto)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<ShipsRestDto>> GetShipsAsyncWithHttpInfo (bool? create = null, string expand = null, string imoNumber = null, string lastUpdate = null, string mmsiNumber = null, string shipName = null, int? page = null, int? size = null)
        {

            var localVarPath = "/ships";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/xml",
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (create != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "create", create)); // query parameter
            if (expand != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "expand", expand)); // query parameter
            if (imoNumber != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "imoNumber", imoNumber)); // query parameter
            if (lastUpdate != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "lastUpdate", lastUpdate)); // query parameter
            if (mmsiNumber != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "mmsiNumber", mmsiNumber)); // query parameter
            if (shipName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "shipName", shipName)); // query parameter
            if (page != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "page", page)); // query parameter
            if (size != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "size", size)); // query parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetShips", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<ShipsRestDto>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (ShipsRestDto) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(ShipsRestDto)));
        }

        /// <summary>
        /// post_getExternalData post_getExternalData
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="idTypeAndValue">id_type_and_value</param>
        /// <returns>HttpEntityobject</returns>
        public HttpEntityobject PostGetExternalData (string idTypeAndValue)
        {
             ApiResponse<HttpEntityobject> localVarResponse = PostGetExternalDataWithHttpInfo(idTypeAndValue);
             return localVarResponse.Data;
        }

        /// <summary>
        /// post_getExternalData post_getExternalData
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="idTypeAndValue">id_type_and_value</param>
        /// <returns>ApiResponse of HttpEntityobject</returns>
        public ApiResponse< HttpEntityobject > PostGetExternalDataWithHttpInfo (string idTypeAndValue)
        {
            // verify the required parameter 'idTypeAndValue' is set
            if (idTypeAndValue == null)
                throw new ApiException(400, "Missing required parameter 'idTypeAndValue' when calling DefaultApi->PostGetExternalData");

            var localVarPath = "/ships/get_external_data/{id_type_and_value}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/xml",
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (idTypeAndValue != null) localVarPathParams.Add("id_type_and_value", this.Configuration.ApiClient.ParameterToString(idTypeAndValue)); // path parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("PostGetExternalData", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<HttpEntityobject>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (HttpEntityobject) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(HttpEntityobject)));
        }

        /// <summary>
        /// post_getExternalData post_getExternalData
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="idTypeAndValue">id_type_and_value</param>
        /// <returns>Task of HttpEntityobject</returns>
        public async System.Threading.Tasks.Task<HttpEntityobject> PostGetExternalDataAsync (string idTypeAndValue)
        {
             ApiResponse<HttpEntityobject> localVarResponse = await PostGetExternalDataAsyncWithHttpInfo(idTypeAndValue);
             return localVarResponse.Data;

        }

        /// <summary>
        /// post_getExternalData post_getExternalData
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="idTypeAndValue">id_type_and_value</param>
        /// <returns>Task of ApiResponse (HttpEntityobject)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<HttpEntityobject>> PostGetExternalDataAsyncWithHttpInfo (string idTypeAndValue)
        {
            // verify the required parameter 'idTypeAndValue' is set
            if (idTypeAndValue == null)
                throw new ApiException(400, "Missing required parameter 'idTypeAndValue' when calling DefaultApi->PostGetExternalData");

            var localVarPath = "/ships/get_external_data/{id_type_and_value}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/xml",
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (idTypeAndValue != null) localVarPathParams.Add("id_type_and_value", this.Configuration.ApiClient.ParameterToString(idTypeAndValue)); // path parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("PostGetExternalData", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<HttpEntityobject>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (HttpEntityobject) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(HttpEntityobject)));
        }

        /// <summary>
        /// Create Ship Creates Ship item for any combination of basic and detailed information.&lt;br&gt;Note that the type of ship data must be specified in the sourceType of Ais, Manual, or External.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">model (optional)</param>
        /// <returns>Ship</returns>
        public Ship PostShip (Ship body = null)
        {
             ApiResponse<Ship> localVarResponse = PostShipWithHttpInfo(body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Create Ship Creates Ship item for any combination of basic and detailed information.&lt;br&gt;Note that the type of ship data must be specified in the sourceType of Ais, Manual, or External.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">model (optional)</param>
        /// <returns>ApiResponse of Ship</returns>
        public ApiResponse< Ship > PostShipWithHttpInfo (Ship body = null)
        {

            var localVarPath = "/ships";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "*/*"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("PostShip", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Ship>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (Ship) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Ship)));
        }

        /// <summary>
        /// Create Ship Creates Ship item for any combination of basic and detailed information.&lt;br&gt;Note that the type of ship data must be specified in the sourceType of Ais, Manual, or External.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">model (optional)</param>
        /// <returns>Task of Ship</returns>
        public async System.Threading.Tasks.Task<Ship> PostShipAsync (Ship body = null)
        {
             ApiResponse<Ship> localVarResponse = await PostShipAsyncWithHttpInfo(body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Create Ship Creates Ship item for any combination of basic and detailed information.&lt;br&gt;Note that the type of ship data must be specified in the sourceType of Ais, Manual, or External.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">model (optional)</param>
        /// <returns>Task of ApiResponse (Ship)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Ship>> PostShipAsyncWithHttpInfo (Ship body = null)
        {

            var localVarPath = "/ships";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "*/*"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("PostShip", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Ship>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (Ship) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Ship)));
        }

        /// <summary>
        /// Update Ship Updates Ship item for any combination of basic and detailed information.&lt;br&gt;Note that the type of ship data must be specified in the sourceType of Ais, Manual, or External.&lt;br&gt;Note that unset input results in no change.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <param name="body">model (optional)</param>
        /// <returns>Ship</returns>
        public Ship PutShip (int? id, Ship body = null)
        {
             ApiResponse<Ship> localVarResponse = PutShipWithHttpInfo(id, body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Update Ship Updates Ship item for any combination of basic and detailed information.&lt;br&gt;Note that the type of ship data must be specified in the sourceType of Ais, Manual, or External.&lt;br&gt;Note that unset input results in no change.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <param name="body">model (optional)</param>
        /// <returns>ApiResponse of Ship</returns>
        public ApiResponse< Ship > PutShipWithHttpInfo (int? id, Ship body = null)
        {
            // verify the required parameter 'id' is set
            if (id == null)
                throw new ApiException(400, "Missing required parameter 'id' when calling DefaultApi->PutShip");

            var localVarPath = "/ships/{id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "*/*"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarPathParams.Add("id", this.Configuration.ApiClient.ParameterToString(id)); // path parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("PutShip", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Ship>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (Ship) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Ship)));
        }

        /// <summary>
        /// Update Ship Updates Ship item for any combination of basic and detailed information.&lt;br&gt;Note that the type of ship data must be specified in the sourceType of Ais, Manual, or External.&lt;br&gt;Note that unset input results in no change.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <param name="body">model (optional)</param>
        /// <returns>Task of Ship</returns>
        public async System.Threading.Tasks.Task<Ship> PutShipAsync (int? id, Ship body = null)
        {
             ApiResponse<Ship> localVarResponse = await PutShipAsyncWithHttpInfo(id, body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Update Ship Updates Ship item for any combination of basic and detailed information.&lt;br&gt;Note that the type of ship data must be specified in the sourceType of Ais, Manual, or External.&lt;br&gt;Note that unset input results in no change.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">the ship id</param>
        /// <param name="body">model (optional)</param>
        /// <returns>Task of ApiResponse (Ship)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Ship>> PutShipAsyncWithHttpInfo (int? id, Ship body = null)
        {
            // verify the required parameter 'id' is set
            if (id == null)
                throw new ApiException(400, "Missing required parameter 'id' when calling DefaultApi->PutShip");

            var localVarPath = "/ships/{id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "*/*"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarPathParams.Add("id", this.Configuration.ApiClient.ParameterToString(id)); // path parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("PutShip", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Ship>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (Ship) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Ship)));
        }

    }
}
