/* 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DefaultApiTests
    {
        private DefaultApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DefaultApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DefaultApi
            //Assert.IsInstanceOfType(typeof(DefaultApi), instance, "instance is a DefaultApi");
        }

        /// <summary>
        /// Test GetShip
        /// </summary>
        [Test]
        public void GetShipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //string expand = null;
            //var response = instance.GetShip(id, expand);
            //Assert.IsInstanceOf<Ship> (response, "response is Ship");
        }
        /// <summary>
        /// Test GetShipDetail
        /// </summary>
        [Test]
        public void GetShipDetailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetShipDetail(id);
            //Assert.IsInstanceOf<ShipDetailRestDto> (response, "response is ShipDetailRestDto");
        }
        /// <summary>
        /// Test GetShips
        /// </summary>
        [Test]
        public void GetShipsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? create = null;
            //string expand = null;
            //string imoNumber = null;
            //string lastUpdate = null;
            //string mmsiNumber = null;
            //string shipName = null;
            //int? page = null;
            //int? size = null;
            //var response = instance.GetShips(create, expand, imoNumber, lastUpdate, mmsiNumber, shipName, page, size);
            //Assert.IsInstanceOf<ShipsRestDto> (response, "response is ShipsRestDto");
        }
        /// <summary>
        /// Test PostGetExternalData
        /// </summary>
        [Test]
        public void PostGetExternalDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string idTypeAndValue = null;
            //var response = instance.PostGetExternalData(idTypeAndValue);
            //Assert.IsInstanceOf<HttpEntityobject> (response, "response is HttpEntityobject");
        }
        /// <summary>
        /// Test PostShip
        /// </summary>
        [Test]
        public void PostShipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Ship body = null;
            //var response = instance.PostShip(body);
            //Assert.IsInstanceOf<Ship> (response, "response is Ship");
        }
        /// <summary>
        /// Test PutShip
        /// </summary>
        [Test]
        public void PutShipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //Ship body = null;
            //var response = instance.PutShip(id, body);
            //Assert.IsInstanceOf<Ship> (response, "response is Ship");
        }
    }

}
