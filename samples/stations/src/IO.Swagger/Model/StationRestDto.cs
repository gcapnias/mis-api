/* 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// StationRestDto
    /// </summary>
    [DataContract]
        public partial class StationRestDto :  IEquatable<StationRestDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StationRestDto" /> class.
        /// </summary>
        /// <param name="cameraStation">cameraStation.</param>
        /// <param name="displayStation">displayStation.</param>
        /// <param name="id">the resource identifier; the station id (an IP address).</param>
        /// <param name="links">*method&#x3D;GET*Provides link relations as URLs using the REST &#x27;hateoas&#x27; convention (for REST delivered data).&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The &#x27;self&#x27; link references this rest object, including any specified query criteria (required).</param>
        /// <param name="reportedTime">reportedTime (required).</param>
        /// <param name="rpStation">rpStation.</param>
        public StationRestDto(CameraStationRestDto cameraStation = default(CameraStationRestDto), DisplayStationRestDto displayStation = default(DisplayStationRestDto), string id = default(string), List<Link> links = default(List<Link>), ReportedTimeRestDto reportedTime = default(ReportedTimeRestDto), RPStationRestDto rpStation = default(RPStationRestDto))
        {
            // to ensure "links" is required (not null)
            if (links == null)
            {
                throw new InvalidDataException("links is a required property for StationRestDto and cannot be null");
            }
            else
            {
                this.Links = links;
            }
            // to ensure "reportedTime" is required (not null)
            if (reportedTime == null)
            {
                throw new InvalidDataException("reportedTime is a required property for StationRestDto and cannot be null");
            }
            else
            {
                this.ReportedTime = reportedTime;
            }
            this.CameraStation = cameraStation;
            this.DisplayStation = displayStation;
            this.Id = id;
            this.RpStation = rpStation;
        }
        
        /// <summary>
        /// Gets or Sets CameraStation
        /// </summary>
        [DataMember(Name="cameraStation", EmitDefaultValue=false)]
        public CameraStationRestDto CameraStation { get; set; }

        /// <summary>
        /// Gets or Sets DisplayStation
        /// </summary>
        [DataMember(Name="displayStation", EmitDefaultValue=false)]
        public DisplayStationRestDto DisplayStation { get; set; }

        /// <summary>
        /// the resource identifier; the station id (an IP address)
        /// </summary>
        /// <value>the resource identifier; the station id (an IP address)</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// *method&#x3D;GET*Provides link relations as URLs using the REST &#x27;hateoas&#x27; convention (for REST delivered data).&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The &#x27;self&#x27; link references this rest object, including any specified query criteria
        /// </summary>
        /// <value>*method&#x3D;GET*Provides link relations as URLs using the REST &#x27;hateoas&#x27; convention (for REST delivered data).&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The &#x27;self&#x27; link references this rest object, including any specified query criteria</value>
        [DataMember(Name="links", EmitDefaultValue=false)]
        public List<Link> Links { get; set; }

        /// <summary>
        /// Gets or Sets ReportedTime
        /// </summary>
        [DataMember(Name="reportedTime", EmitDefaultValue=false)]
        public ReportedTimeRestDto ReportedTime { get; set; }

        /// <summary>
        /// Gets or Sets RpStation
        /// </summary>
        [DataMember(Name="rpStation", EmitDefaultValue=false)]
        public RPStationRestDto RpStation { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StationRestDto {\n");
            sb.Append("  CameraStation: ").Append(CameraStation).Append("\n");
            sb.Append("  DisplayStation: ").Append(DisplayStation).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Links: ").Append(Links).Append("\n");
            sb.Append("  ReportedTime: ").Append(ReportedTime).Append("\n");
            sb.Append("  RpStation: ").Append(RpStation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as StationRestDto);
        }

        /// <summary>
        /// Returns true if StationRestDto instances are equal
        /// </summary>
        /// <param name="input">Instance of StationRestDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StationRestDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CameraStation == input.CameraStation ||
                    (this.CameraStation != null &&
                    this.CameraStation.Equals(input.CameraStation))
                ) && 
                (
                    this.DisplayStation == input.DisplayStation ||
                    (this.DisplayStation != null &&
                    this.DisplayStation.Equals(input.DisplayStation))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Links == input.Links ||
                    this.Links != null &&
                    input.Links != null &&
                    this.Links.SequenceEqual(input.Links)
                ) && 
                (
                    this.ReportedTime == input.ReportedTime ||
                    (this.ReportedTime != null &&
                    this.ReportedTime.Equals(input.ReportedTime))
                ) && 
                (
                    this.RpStation == input.RpStation ||
                    (this.RpStation != null &&
                    this.RpStation.Equals(input.RpStation))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CameraStation != null)
                    hashCode = hashCode * 59 + this.CameraStation.GetHashCode();
                if (this.DisplayStation != null)
                    hashCode = hashCode * 59 + this.DisplayStation.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Links != null)
                    hashCode = hashCode * 59 + this.Links.GetHashCode();
                if (this.ReportedTime != null)
                    hashCode = hashCode * 59 + this.ReportedTime.GetHashCode();
                if (this.RpStation != null)
                    hashCode = hashCode * 59 + this.RpStation.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
