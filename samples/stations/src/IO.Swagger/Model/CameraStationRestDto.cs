/* 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// CameraStationRestDto
    /// </summary>
    [DataContract]
        public partial class CameraStationRestDto :  IEquatable<CameraStationRestDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CameraStationRestDto" /> class.
        /// </summary>
        /// <param name="cameraServices">Further information for each Camera managed (required).</param>
        /// <param name="reportedTime">reportedTime.</param>
        public CameraStationRestDto(List<CameraServiceRestDto> cameraServices = default(List<CameraServiceRestDto>), ReportedTimeRestDto reportedTime = default(ReportedTimeRestDto))
        {
            // to ensure "cameraServices" is required (not null)
            if (cameraServices == null)
            {
                throw new InvalidDataException("cameraServices is a required property for CameraStationRestDto and cannot be null");
            }
            else
            {
                this.CameraServices = cameraServices;
            }
            this.ReportedTime = reportedTime;
        }
        
        /// <summary>
        /// Further information for each Camera managed
        /// </summary>
        /// <value>Further information for each Camera managed</value>
        [DataMember(Name="cameraServices", EmitDefaultValue=false)]
        public List<CameraServiceRestDto> CameraServices { get; set; }

        /// <summary>
        /// Gets or Sets ReportedTime
        /// </summary>
        [DataMember(Name="reportedTime", EmitDefaultValue=false)]
        public ReportedTimeRestDto ReportedTime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CameraStationRestDto {\n");
            sb.Append("  CameraServices: ").Append(CameraServices).Append("\n");
            sb.Append("  ReportedTime: ").Append(ReportedTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CameraStationRestDto);
        }

        /// <summary>
        /// Returns true if CameraStationRestDto instances are equal
        /// </summary>
        /// <param name="input">Instance of CameraStationRestDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CameraStationRestDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CameraServices == input.CameraServices ||
                    this.CameraServices != null &&
                    input.CameraServices != null &&
                    this.CameraServices.SequenceEqual(input.CameraServices)
                ) && 
                (
                    this.ReportedTime == input.ReportedTime ||
                    (this.ReportedTime != null &&
                    this.ReportedTime.Equals(input.ReportedTime))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CameraServices != null)
                    hashCode = hashCode * 59 + this.CameraServices.GetHashCode();
                if (this.ReportedTime != null)
                    hashCode = hashCode * 59 + this.ReportedTime.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
