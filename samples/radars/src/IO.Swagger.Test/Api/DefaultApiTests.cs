/* 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DefaultApiTests
    {
        private DefaultApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DefaultApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DefaultApi
            //Assert.IsInstanceOfType(typeof(DefaultApi), instance, "instance is a DefaultApi");
        }

        /// <summary>
        /// Test GetRadarControl
        /// </summary>
        [Test]
        public void GetRadarControlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetRadarControl(id);
            //Assert.IsInstanceOf<RadarControlRestDto> (response, "response is RadarControlRestDto");
        }
        /// <summary>
        /// Test GetRadarData
        /// </summary>
        [Test]
        public void GetRadarDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //string expand = null;
            //var response = instance.GetRadarData(id, expand);
            //Assert.IsInstanceOf<RadarRestDto> (response, "response is RadarRestDto");
        }
        /// <summary>
        /// Test GetRadarDatas
        /// </summary>
        [Test]
        public void GetRadarDatasTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string expand = null;
            //var response = instance.GetRadarDatas(expand);
            //Assert.IsInstanceOf<RadarsRestDto> (response, "response is RadarsRestDto");
        }
        /// <summary>
        /// Test GetRadarDetail
        /// </summary>
        [Test]
        public void GetRadarDetailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetRadarDetail(id);
            //Assert.IsInstanceOf<RadarDetailRestDto> (response, "response is RadarDetailRestDto");
        }
        /// <summary>
        /// Test GetRadarTermaBiteMeasurements
        /// </summary>
        [Test]
        public void GetRadarTermaBiteMeasurementsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //string updateSince = null;
            //int? size = null;
            //var response = instance.GetRadarTermaBiteMeasurements(id, updateSince, size);
            //Assert.IsInstanceOf<RadarTermaBiteMsRestDto> (response, "response is RadarTermaBiteMsRestDto");
        }
        /// <summary>
        /// Test UpdateFilter
        /// </summary>
        [Test]
        public void UpdateFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FilterRestDto body = null;
            //int? id = null;
            //instance.UpdateFilter(body, id);
            
        }
        /// <summary>
        /// Test UpdateRadarMode
        /// </summary>
        [Test]
        public void UpdateRadarModeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RadarModeRestDto body = null;
            //int? id = null;
            //instance.UpdateRadarMode(body, id);
            
        }
        /// <summary>
        /// Test UpdateRadarState
        /// </summary>
        [Test]
        public void UpdateRadarStateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RadarStateRestDto body = null;
            //int? id = null;
            //instance.UpdateRadarState(body, id);
            
        }
        /// <summary>
        /// Test UpdateRangeScale
        /// </summary>
        [Test]
        public void UpdateRangeScaleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RangeScaleRestDto body = null;
            //int? id = null;
            //instance.UpdateRangeScale(body, id);
            
        }
        /// <summary>
        /// Test UpdateTermaProfile
        /// </summary>
        [Test]
        public void UpdateTermaProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TermaProfileRestDto body = null;
            //int? id = null;
            //instance.UpdateTermaProfile(body, id);
            
        }
    }

}
