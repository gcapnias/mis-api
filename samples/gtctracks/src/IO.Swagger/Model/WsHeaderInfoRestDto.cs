/* 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Not used - Centroid data
    /// </summary>
    [DataContract]
        public partial class WsHeaderInfoRestDto :  IEquatable<WsHeaderInfoRestDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WsHeaderInfoRestDto" /> class.
        /// </summary>
        /// <param name="sendTime">time in epoch milliseconds the data was sent from MIS.</param>
        /// <param name="sequenceNum">sequence number of data for this URL. This increases by 1 per message, but won&#x27;t necessarily start at 1. .</param>
        /// <param name="url">subscription URL.</param>
        public WsHeaderInfoRestDto(long? sendTime = default(long?), long? sequenceNum = default(long?), string url = default(string))
        {
            this.SendTime = sendTime;
            this.SequenceNum = sequenceNum;
            this.Url = url;
        }
        
        /// <summary>
        /// time in epoch milliseconds the data was sent from MIS
        /// </summary>
        /// <value>time in epoch milliseconds the data was sent from MIS</value>
        [DataMember(Name="send_time", EmitDefaultValue=false)]
        public long? SendTime { get; set; }

        /// <summary>
        /// sequence number of data for this URL. This increases by 1 per message, but won&#x27;t necessarily start at 1. 
        /// </summary>
        /// <value>sequence number of data for this URL. This increases by 1 per message, but won&#x27;t necessarily start at 1. </value>
        [DataMember(Name="sequenceNum", EmitDefaultValue=false)]
        public long? SequenceNum { get; set; }

        /// <summary>
        /// subscription URL
        /// </summary>
        /// <value>subscription URL</value>
        [DataMember(Name="url", EmitDefaultValue=false)]
        public string Url { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WsHeaderInfoRestDto {\n");
            sb.Append("  SendTime: ").Append(SendTime).Append("\n");
            sb.Append("  SequenceNum: ").Append(SequenceNum).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WsHeaderInfoRestDto);
        }

        /// <summary>
        /// Returns true if WsHeaderInfoRestDto instances are equal
        /// </summary>
        /// <param name="input">Instance of WsHeaderInfoRestDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WsHeaderInfoRestDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SendTime == input.SendTime ||
                    (this.SendTime != null &&
                    this.SendTime.Equals(input.SendTime))
                ) && 
                (
                    this.SequenceNum == input.SequenceNum ||
                    (this.SequenceNum != null &&
                    this.SequenceNum.Equals(input.SequenceNum))
                ) && 
                (
                    this.Url == input.Url ||
                    (this.Url != null &&
                    this.Url.Equals(input.Url))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SendTime != null)
                    hashCode = hashCode * 59 + this.SendTime.GetHashCode();
                if (this.SequenceNum != null)
                    hashCode = hashCode * 59 + this.SequenceNum.GetHashCode();
                if (this.Url != null)
                    hashCode = hashCode * 59 + this.Url.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
